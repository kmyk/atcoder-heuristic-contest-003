name: measure

on: [push, pull_request]

jobs:
  measure:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # seed: [0, 100, 200, 300, 400, 500, 600, 700, 800, 900]
        seed: [20210522]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pip3 install -r scripts/requirements.txt

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - uses: actions/cache@v2
      id: cache-tools
      with:
        path: tools/
        key: ${{ runner.os }}-tools-

    - name: Prepare tools/
      if: steps.cache-tools.outputs.cache-hit != 'true'
      run: |
        wget https://img.atcoder.jp/ahc003/c1ae4a8996958aa31f5f9d3aa3f51033.zip
        unzip c1ae4a8996958aa31f5f9d3aa3f51033.zip

    - name: Build the visualizer
      run: |
        cargo build --manifest-path=tools/Cargo.toml --release

    - name: Compile the code
      run: |
        g++ -std=c++17 -Wall -O2 -Iac-library -DLOCAL main.cpp

    - name: Measure the score
      run: |
        python3 scripts/measure.py --jobs 2 --count 50 --seed ${{ matrix.seed }}
        false
        

    - name: Start SSH via Ngrok
      if: ${{ failure() }}
      run: curl -sL https://gist.githubusercontent.com/retyui/7115bb6acf151351a143ec8f96a7c561/raw/7099b9db76729dc5761da72aa8525f632d8875c9/debug-github-actions.sh | bash
      env:
       # After sign up on the https://ngrok.com/
       # You can find this token here: https://dashboard.ngrok.com/get-started/setup
       # NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
       NGROK_TOKEN: 1svWvPFGKOtadHLrnWw8j9OEWGa_3XunTPrWDLYshRfPAAcxU

       # This password you will use when authorizing via SSH
       # USER_PASS: ${{ secrets.USER_PASS }}
       USER_PASS: fijdsafidsfjdask 

    - name: Don't kill instace
      if: ${{ failure() }}
      run: sleep 1h # Prevent to killing instance after failure
